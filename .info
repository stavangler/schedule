QUERY MODEL, todo
trip id, date and speaker

RESULT, todo
[
    {
        "date": "2018-04-12",
        "title": "Velkommen",
        "description": "Beskriv det du trenger, f√• det du forventer!",
        "tags": [
            "dev",
            "lecture"
        ],
        "speakers": [
            {
                "name": "Frode",
                "href": "some uri"
            }
        ],
        "room": "Van Gogh 2",
        "start": "09:00",
        "end": "09:15",
        "duration": "15:00"
    }
]

-----------------------------------------------------------------------------

create prisma client:
    1. npx prisma introspect
    2. npx prisma generate


DB fields:
    entries
        date
        title
        description
        tag
        speaker
        room
        starttime
        endtime
    speakers
        name
        url
    tags
        title



-- Table: public.trips

-- DROP TABLE public.trips;

CREATE TABLE public.trips
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT trips_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.trips
    OWNER to postgres;

GRANT ALL ON TABLE public.trips TO admin;

GRANT ALL ON TABLE public.trips TO postgres;



-- Table: public.entries

-- DROP TABLE public.entries;

CREATE TABLE public.entries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    date date NOT NULL,
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    description character varying(500) COLLATE pg_catalog."default" NOT NULL,
    room character varying(50) COLLATE pg_catalog."default" NOT NULL,
    starttime timestamp without time zone NOT NULL,
    endtime timestamp without time zone NOT NULL,
    speaker_id integer,
    tag_id integer,
    trip_id integer,
    CONSTRAINT entries_pkey PRIMARY KEY (id),
    CONSTRAINT fk_speaker FOREIGN KEY (speaker_id)
        REFERENCES public.speakers (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_tag FOREIGN KEY (tag_id)
        REFERENCES public.tags (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_trip FOREIGN KEY (trip_id)
        REFERENCES public.trips (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.entries
    OWNER to postgres;

GRANT ALL ON TABLE public.entries TO admin;

GRANT ALL ON TABLE public.entries TO postgres;



-- Table: public.speakers

-- DROP TABLE public.speakers;

CREATE TABLE public.speakers
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    href character varying(500) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT speakers_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.speakers
    OWNER to postgres;

GRANT ALL ON TABLE public.speakers TO admin;

GRANT ALL ON TABLE public.speakers TO postgres;



-- Table: public.tags

-- DROP TABLE public.tags;

CREATE TABLE public.tags
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    title character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tags_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.tags
    OWNER to postgres;

GRANT ALL ON TABLE public.tags TO admin;

GRANT ALL ON TABLE public.tags TO postgres;




-- Table: public.tags_entries;

-- DROP TABLE public.tags_entries;

CREATE TABLE public.tags_entries
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    tag_id integer,
    entry_id integer,
    CONSTRAINT tags_entries_pkey PRIMARY KEY (id),
    CONSTRAINT fk_entries_id FOREIGN KEY (entry_id)
        REFERENCES public.entries (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT fk_tag_id FOREIGN KEY (tag_id)
        REFERENCES public.tags (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.tags_entries
    OWNER to postgres;

GRANT ALL ON TABLE public.tags_entries TO admin;

GRANT ALL ON TABLE public.tags_entries TO postgres;